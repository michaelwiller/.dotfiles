#!/bin/bash

CONFIG_FILE=$HOME/.local/.utmctl.config
COMMAND=$0

usage(){
	echo "$0"
	echo "   rm NAME"
	echo "          Remove server:port with name NAME"
	echo "   sp NAME PORT"
	echo "          Set port to PORT on server of NAME"
	echo "   ls [TXT]"
	echo "          Search for TXT or list all content if no TXT"
	echo "  start/stop [NAME]"
	echo "          Start or stop the VM with specified name"
	echo "  ssh [NAME]"
	echo "          ssh to utm@localhost:PORT, using the PORT saved on the NAME"
	echo "  refresh-local-env [NAME]"
	echo "          ssh to utm@localhost:PORT, using the PORT saved on the NAME"
}

getPort(){
	p=$(keyval get $1)
	if [ "$p" == "" ]; then
		echo "VM definition not found for vm name = $1" > /dev/tty
		exit 0
	fi
	echo $p
}
keyval(){
	keyval.sh $CONFIG_FILE $*
}


mkdir -p $(dirname $CONFIG_FILE)
touch $CONFIG_FILE
action=$1; shift
case $action in

	help)
		usage
		;;

	ls)
		keyval ls "$1"
		;;
	rm) 
		keyval rm $1
		;;

	sp)
		keyval set $1 $2
		;;
		
	cp)
		p=$(getPort $1)
		scp -P $p "$2" utm@127.0.0.1:.
		;;

	ssh)
		p=$(getPort $1)
		ssh -p $p utm@127.0.0.1
		;;

	refresh-local-env)

		p=$(getPort $1)
		f=/tmp/.bash-local-env
		rm $f 2>/dev/null
		touch $f
		echo "export CHEZMOI_GITHUB_USER=$CHEZMOI_GITHUB_USER" >> $f
		echo "export EDB_SUBSCRIPTION_TOKEN=$EDB_SUBSCRIPTION_TOKEN" >> $f
		echo "export REPO=k8s_enterprise_pgd" >> $f
		echo "export TOKEN=$EDB_SUBSCRIPTION_TOKEN" >> $f
		echo "export TMUX_ENABLED=false" >> $f
		chmod 600 $f
		scp -P $p $f utm@127.0.0.1:$(basename $f)
		;;


	start) 
		p=$(getPort $1)
		[ -z $p ] && exit 0
		osascript <<EOF
		tell application "UTM"
		  set vm to virtual machine named "$1"
		  start vm
    		end tell
EOF
		;;
	stop)
		p=$(getPort $1) 
		[ -z $p ] && exit 0
		ssh -p $p utm@127.0.0.1 sudo shutdown now -f
		;;

	*)
		usage
esac
